# Generated by Django 3.2.15 on 2022-10-02 10:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_seats', models.IntegerField()),
                ('time_stamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
            },
        ),
        migrations.CreateModel(
            name='CommonInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=6)),
                ('name', models.CharField(max_length=100)),
                ('dob', models.DateField()),
                ('profile_image', models.ImageField(upload_to='media/profile_image')),
                ('bio', models.TextField()),
            ],
            options={
                'verbose_name': 'CommonInfo',
                'verbose_name_plural': 'CommonInfos',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
            },
        ),
        migrations.CreateModel(
            name='InTheater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_date', models.DateField()),
                ('show_time', models.TimeField()),
            ],
            options={
                'verbose_name': 'InTheater',
                'verbose_name_plural': 'InTheaters',
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_no', models.IntegerField()),
                ('seat_type', models.CharField(choices=[('Premium', 'Premium'), ('Regular', 'Regular')], max_length=7)),
            ],
            options={
                'verbose_name': 'Seat',
                'verbose_name_plural': 'Seats',
            },
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('commoninfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blackerraidapp.commoninfo')),
            ],
            options={
                'verbose_name': 'Actor',
                'verbose_name_plural': 'Actors',
            },
            bases=('blackerraidapp.commoninfo',),
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('commoninfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blackerraidapp.commoninfo')),
                ('directcs', models.CharField(choices=[('Short Film', 'Short Film'), ('Film', 'Film'), ('Tv Show', 'TV Show'), ('Tv Commercial', 'TV Commercial')], max_length=15)),
            ],
            options={
                'verbose_name': 'Director',
                'verbose_name_plural': 'Directors',
            },
            bases=('blackerraidapp.commoninfo',),
        ),
        migrations.CreateModel(
            name='Theater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('total_seat', models.IntegerField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='blackerraidapp.district')),
            ],
            options={
                'verbose_name': 'Theater',
                'verbose_name_plural': 'Theaters',
            },
        ),
        migrations.CreateModel(
            name='ShowSeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('booking', models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='blackerraidapp.booking')),
                ('intheater', models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='blackerraidapp.intheater')),
                ('seat', models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='blackerraidapp.seat')),
            ],
            options={
                'verbose_name': 'ShowSeat',
                'verbose_name_plural': 'ShowSeats',
            },
        ),
        migrations.AddField(
            model_name='seat',
            name='theater',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='blackerraidapp.theater'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('time_stamp', models.DateTimeField(auto_now_add=True)),
                ('transactionId', models.CharField(max_length=80)),
                ('payment_method', models.CharField(max_length=80)),
                ('booking', models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='blackerraidapp.booking')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('release', models.DateField()),
                ('poster', models.ImageField(upload_to='media/thumbnail')),
                ('duration', models.IntegerField()),
                ('genres', models.ManyToManyField(to='blackerraidapp.Genre')),
                ('actors', models.ManyToManyField(to='blackerraidapp.Actor')),
                ('director', models.ManyToManyField(to='blackerraidapp.Director')),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
            },
        ),
        migrations.AddField(
            model_name='intheater',
            name='name',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='blackerraidapp.movie'),
        ),
        migrations.AddField(
            model_name='intheater',
            name='theater',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='blackerraidapp.theater'),
        ),
        migrations.AddField(
            model_name='booking',
            name='show',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='blackerraidapp.intheater'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
